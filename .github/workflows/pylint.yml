name: Pylint and Deploy to PyPI

on:
  push:

jobs:
  lint:
    runs-on: ubuntu-latest
    environment:
      name: pipy
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies for linting
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Analyzing the code with pylint
      run: |
        pylint --disable=E0401 $(git ls-files '*.py')

  build:
    runs-on: ubuntu-latest
    environment:
      name: pipy
    needs: lint
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies for build
      run: |
        python -m pip install --upgrade pip
        pip install twine wheel setuptools build
    - name: Clean dist folder
      run: |
        rm -rf dist
    - name: Build the package
      run: |
        python -m build

  deploy:
    runs-on: ubuntu-latest
    environment:
      name: pipy
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install twine for deployment
      run: |
        python -m pip install twine
    - name: Publish to PyPI
      env:
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        python -m twine upload --skip-existing dist/*
